// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MovingObjectFormat.proto

#ifndef PROTOBUF_MovingObjectFormat_2eproto__INCLUDED
#define PROTOBUF_MovingObjectFormat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BaseType.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_MovingObjectFormat_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMovingObjectFormatImpl();
void InitDefaultsMovingObjectFormat();
inline void InitDefaults() {
  InitDefaultsMovingObjectFormat();
}
}  // namespace protobuf_MovingObjectFormat_2eproto
class MovingObjectFormat;
class MovingObjectFormatDefaultTypeInternal;
extern MovingObjectFormatDefaultTypeInternal _MovingObjectFormat_default_instance_;

// ===================================================================

class MovingObjectFormat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MovingObjectFormat) */ {
 public:
  MovingObjectFormat();
  virtual ~MovingObjectFormat();

  MovingObjectFormat(const MovingObjectFormat& from);

  inline MovingObjectFormat& operator=(const MovingObjectFormat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MovingObjectFormat(MovingObjectFormat&& from) noexcept
    : MovingObjectFormat() {
    *this = ::std::move(from);
  }

  inline MovingObjectFormat& operator=(MovingObjectFormat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MovingObjectFormat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MovingObjectFormat* internal_default_instance() {
    return reinterpret_cast<const MovingObjectFormat*>(
               &_MovingObjectFormat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MovingObjectFormat* other);
  friend void swap(MovingObjectFormat& a, MovingObjectFormat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MovingObjectFormat* New() const PROTOBUF_FINAL { return New(NULL); }

  MovingObjectFormat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MovingObjectFormat& from);
  void MergeFrom(const MovingObjectFormat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MovingObjectFormat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string osgFile = 5;
  bool has_osgfile() const;
  void clear_osgfile();
  static const int kOsgFileFieldNumber = 5;
  const ::std::string& osgfile() const;
  void set_osgfile(const ::std::string& value);
  #if LANG_CXX11
  void set_osgfile(::std::string&& value);
  #endif
  void set_osgfile(const char* value);
  void set_osgfile(const char* value, size_t size);
  ::std::string* mutable_osgfile();
  ::std::string* release_osgfile();
  void set_allocated_osgfile(::std::string* osgfile);

  // required .Pos pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  const ::Pos& pos() const;
  ::Pos* release_pos();
  ::Pos* mutable_pos();
  void set_allocated_pos(::Pos* pos);

  // required .Orient heading = 7;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 7;
  const ::Orient& heading() const;
  ::Orient* release_heading();
  ::Orient* mutable_heading();
  void set_allocated_heading(::Orient* heading);

  // required .Orient speed = 8;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 8;
  const ::Orient& speed() const;
  ::Orient* release_speed();
  ::Orient* mutable_speed();
  void set_allocated_speed(::Orient* speed);

  // required .Contour contour = 9;
  bool has_contour() const;
  void clear_contour();
  static const int kContourFieldNumber = 9;
  const ::Contour& contour() const;
  ::Contour* release_contour();
  ::Contour* mutable_contour();
  void set_allocated_contour(::Contour* contour);

  // required .TP_OBJECT_TYPE type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::TP_OBJECT_TYPE type() const;
  void set_type(::TP_OBJECT_TYPE value);

  // required int32 id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MovingObjectFormat)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_id();
  void clear_has_id();
  void set_has_osgfile();
  void clear_has_osgfile();
  void set_has_pos();
  void clear_has_pos();
  void set_has_heading();
  void clear_has_heading();
  void set_has_speed();
  void clear_has_speed();
  void set_has_contour();
  void clear_has_contour();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr osgfile_;
  ::Pos* pos_;
  ::Orient* heading_;
  ::Orient* speed_;
  ::Contour* contour_;
  int type_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_MovingObjectFormat_2eproto::TableStruct;
  friend void ::protobuf_MovingObjectFormat_2eproto::InitDefaultsMovingObjectFormatImpl();
};
// ===================================================================


// ===================================================================

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MovingObjectFormat

// required .TP_OBJECT_TYPE type = 1;
inline bool MovingObjectFormat::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MovingObjectFormat::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MovingObjectFormat::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MovingObjectFormat::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TP_OBJECT_TYPE MovingObjectFormat::type() const {
  // @@protoc_insertion_point(field_get:MovingObjectFormat.type)
  return static_cast< ::TP_OBJECT_TYPE >(type_);
}
inline void MovingObjectFormat::set_type(::TP_OBJECT_TYPE value) {
  assert(::TP_OBJECT_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MovingObjectFormat.type)
}

// required string name = 3;
inline bool MovingObjectFormat::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MovingObjectFormat::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MovingObjectFormat::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MovingObjectFormat::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MovingObjectFormat::name() const {
  // @@protoc_insertion_point(field_get:MovingObjectFormat.name)
  return name_.GetNoArena();
}
inline void MovingObjectFormat::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MovingObjectFormat.name)
}
#if LANG_CXX11
inline void MovingObjectFormat::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MovingObjectFormat.name)
}
#endif
inline void MovingObjectFormat::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MovingObjectFormat.name)
}
inline void MovingObjectFormat::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MovingObjectFormat.name)
}
inline ::std::string* MovingObjectFormat::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MovingObjectFormat::release_name() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MovingObjectFormat::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.name)
}

// required int32 id = 4;
inline bool MovingObjectFormat::has_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MovingObjectFormat::set_has_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MovingObjectFormat::clear_has_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MovingObjectFormat::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MovingObjectFormat::id() const {
  // @@protoc_insertion_point(field_get:MovingObjectFormat.id)
  return id_;
}
inline void MovingObjectFormat::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MovingObjectFormat.id)
}

// optional string osgFile = 5;
inline bool MovingObjectFormat::has_osgfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MovingObjectFormat::set_has_osgfile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MovingObjectFormat::clear_has_osgfile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MovingObjectFormat::clear_osgfile() {
  osgfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_osgfile();
}
inline const ::std::string& MovingObjectFormat::osgfile() const {
  // @@protoc_insertion_point(field_get:MovingObjectFormat.osgFile)
  return osgfile_.GetNoArena();
}
inline void MovingObjectFormat::set_osgfile(const ::std::string& value) {
  set_has_osgfile();
  osgfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MovingObjectFormat.osgFile)
}
#if LANG_CXX11
inline void MovingObjectFormat::set_osgfile(::std::string&& value) {
  set_has_osgfile();
  osgfile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MovingObjectFormat.osgFile)
}
#endif
inline void MovingObjectFormat::set_osgfile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_osgfile();
  osgfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MovingObjectFormat.osgFile)
}
inline void MovingObjectFormat::set_osgfile(const char* value, size_t size) {
  set_has_osgfile();
  osgfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MovingObjectFormat.osgFile)
}
inline ::std::string* MovingObjectFormat::mutable_osgfile() {
  set_has_osgfile();
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.osgFile)
  return osgfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MovingObjectFormat::release_osgfile() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.osgFile)
  clear_has_osgfile();
  return osgfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MovingObjectFormat::set_allocated_osgfile(::std::string* osgfile) {
  if (osgfile != NULL) {
    set_has_osgfile();
  } else {
    clear_has_osgfile();
  }
  osgfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), osgfile);
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.osgFile)
}

// required .Pos pos = 6;
inline bool MovingObjectFormat::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MovingObjectFormat::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MovingObjectFormat::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::Pos& MovingObjectFormat::pos() const {
  const ::Pos* p = pos_;
  // @@protoc_insertion_point(field_get:MovingObjectFormat.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Pos*>(
      &::_Pos_default_instance_);
}
inline ::Pos* MovingObjectFormat::release_pos() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.pos)
  clear_has_pos();
  ::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::Pos* MovingObjectFormat::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::Pos;
  }
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.pos)
  return pos_;
}
inline void MovingObjectFormat::set_allocated_pos(::Pos* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    set_has_pos();
  } else {
    clear_has_pos();
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.pos)
}

// required .Orient heading = 7;
inline bool MovingObjectFormat::has_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MovingObjectFormat::set_has_heading() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MovingObjectFormat::clear_has_heading() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::Orient& MovingObjectFormat::heading() const {
  const ::Orient* p = heading_;
  // @@protoc_insertion_point(field_get:MovingObjectFormat.heading)
  return p != NULL ? *p : *reinterpret_cast<const ::Orient*>(
      &::_Orient_default_instance_);
}
inline ::Orient* MovingObjectFormat::release_heading() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.heading)
  clear_has_heading();
  ::Orient* temp = heading_;
  heading_ = NULL;
  return temp;
}
inline ::Orient* MovingObjectFormat::mutable_heading() {
  set_has_heading();
  if (heading_ == NULL) {
    heading_ = new ::Orient;
  }
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.heading)
  return heading_;
}
inline void MovingObjectFormat::set_allocated_heading(::Orient* heading) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(heading_);
  }
  if (heading) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      heading = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heading, submessage_arena);
    }
    set_has_heading();
  } else {
    clear_has_heading();
  }
  heading_ = heading;
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.heading)
}

// required .Orient speed = 8;
inline bool MovingObjectFormat::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MovingObjectFormat::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MovingObjectFormat::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::Orient& MovingObjectFormat::speed() const {
  const ::Orient* p = speed_;
  // @@protoc_insertion_point(field_get:MovingObjectFormat.speed)
  return p != NULL ? *p : *reinterpret_cast<const ::Orient*>(
      &::_Orient_default_instance_);
}
inline ::Orient* MovingObjectFormat::release_speed() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.speed)
  clear_has_speed();
  ::Orient* temp = speed_;
  speed_ = NULL;
  return temp;
}
inline ::Orient* MovingObjectFormat::mutable_speed() {
  set_has_speed();
  if (speed_ == NULL) {
    speed_ = new ::Orient;
  }
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.speed)
  return speed_;
}
inline void MovingObjectFormat::set_allocated_speed(::Orient* speed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(speed_);
  }
  if (speed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      speed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, speed, submessage_arena);
    }
    set_has_speed();
  } else {
    clear_has_speed();
  }
  speed_ = speed;
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.speed)
}

// required .Contour contour = 9;
inline bool MovingObjectFormat::has_contour() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MovingObjectFormat::set_has_contour() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MovingObjectFormat::clear_has_contour() {
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::Contour& MovingObjectFormat::contour() const {
  const ::Contour* p = contour_;
  // @@protoc_insertion_point(field_get:MovingObjectFormat.contour)
  return p != NULL ? *p : *reinterpret_cast<const ::Contour*>(
      &::_Contour_default_instance_);
}
inline ::Contour* MovingObjectFormat::release_contour() {
  // @@protoc_insertion_point(field_release:MovingObjectFormat.contour)
  clear_has_contour();
  ::Contour* temp = contour_;
  contour_ = NULL;
  return temp;
}
inline ::Contour* MovingObjectFormat::mutable_contour() {
  set_has_contour();
  if (contour_ == NULL) {
    contour_ = new ::Contour;
  }
  // @@protoc_insertion_point(field_mutable:MovingObjectFormat.contour)
  return contour_;
}
inline void MovingObjectFormat::set_allocated_contour(::Contour* contour) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(contour_);
  }
  if (contour) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contour = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contour, submessage_arena);
    }
    set_has_contour();
  } else {
    clear_has_contour();
  }
  contour_ = contour;
  // @@protoc_insertion_point(field_set_allocated:MovingObjectFormat.contour)
}

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MovingObjectFormat_2eproto__INCLUDED
